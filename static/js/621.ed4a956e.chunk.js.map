{"version":3,"file":"static/js/621.ed4a956e.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.module.css","components/SearchBar/SearchBar.jsx","pages/MoviesPage/MoviePage.jsx","services/tmdb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\",\"movieListItem\":\"MovieList_movieListItem__6DqRG\",\"movieLink\":\"MovieList_movieLink__kzavH\",\"movieImage\":\"MovieList_movieImage__txbdB\",\"movieTitle\":\"MovieList_movieTitle__RhENm\"};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport css from './MovieList.module.css';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <ul className={css.movieList}>\n      {movies.map(movie => (\n        <li key={movie.id} className={css.movieListItem}>\n          <Link to={`/movies/${movie.id}`} className={css.movieLink}>\n            <img\n              src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n              alt={movie.title}\n              className={css.movieImage}\n            />\n            <p className={css.movieTitle}>{movie.title}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import propTypes from 'prop-types';\nimport { HiSearch } from 'react-icons/hi';\nimport { DebounceInput } from 'react-debounce-input';\nimport css from './SearchBar.module.css';\n\nexport const SearchBar = ({ onChange, value }) => {\n  const handleChange = e => {\n    onChange(e.target.value);\n  };\n\n  return (\n    <div className={css.InputWrapper}>\n      <DebounceInput\n        className={css.input}\n        type=\"text\"\n        value={value}\n        onChange={handleChange}\n        placeholder=\"Search movies...\"\n        minLength={2}\n        debounceTimeout={500}\n      />\n      <HiSearch className={css.icon} />\n    </div>\n  );\n};\n\nSearchBar.propTypes = {\n  onChange: propTypes.func,\n  value: propTypes.string,\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieQuery } from 'services/tmdb-api';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst MoviePage = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n  const [isLoading, setIsLoading] = useState(false);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const movies = await fetchMovieQuery(movieName);\n        setSearchResults(movies);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [movieName]);\n\n  return (\n    <div>\n      <SearchBar value={movieName} onChange={updateQueryString} />\n      {isLoading ? (\n        <Loader />\n      ) : movieName && searchResults.length === 0 ? (\n        <h2>ðŸ”Ž Nothing Found</h2>\n      ) : (\n        <MovieList movies={searchResults} />\n      )}\n    </div>\n  );\n};\n\nexport default MoviePage;\n","import axios from 'axios';\n\nconst API_KEY = '526b650b7a87d81fa6582d5f1ca94e82';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\n// Fetch Trening Movies\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`);\n  return response.data.results;\n};\n\n// Fetch Movies by Query\nexport const fetchMovieQuery = async movieName => {\n  const response = await axios.get(`search/movie?query=${movieName}`);\n  return response.data.results;\n};\n\n// Fetch Movie Details\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n};\n\n// Fetch Movie Cast\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\n// Fetch Movie Reviews\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`);\n  return response.data.results;\n};\n"],"names":["MovieList","_ref","movies","_jsx","className","css","children","map","movie","_jsxs","Link","to","concat","id","src","poster_path","alt","title","SearchBar","onChange","value","DebounceInput","type","e","target","placeholder","minLength","debounceTimeout","HiSearch","_searchParams$get","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResults","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","movieName","get","_useState3","_useState4","isLoading","setIsLoading","useEffect","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","fetchMovieQuery","sent","t0","console","error","finish","stop","query","Loader","length","axios","api_key","fetchTrendingMovies","response","abrupt","data","results","apply","arguments","_ref2","_callee2","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}
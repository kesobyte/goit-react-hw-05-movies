{"version":3,"file":"static/js/940.77628109.chunk.js","mappings":"sPACA,GAAiB,E,SC0BjB,EAxBqB,SAAHA,GAA6C,IAAvCC,EAAWD,EAAXC,YAAaC,EAAYF,EAAZE,aAAcC,EAAIH,EAAJG,KACjD,OACEC,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAAA,aAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OACEC,MAAM,QACNC,OAAO,QACPC,IACEV,EAAW,kCAAAW,OAC2BX,GAAW,sDAGnDY,IAAKX,KAEPM,EAAAA,EAAAA,KAAA,KAAAD,SAAIJ,MAGV,ECwBA,EAtCiB,SAAHH,GAA0B,IAApBc,EAAYd,EAAZc,aACVC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAiB9B,OAfAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEWtB,EAAaC,GAAS,KAAD,EAAtCkB,EAAQC,EAAAG,KACdf,EAAQW,GAAUC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAElBK,QAAQC,MAAKN,EAAAI,IAAQ,QAED,OAFCJ,EAAAC,KAAA,GAErBT,GAAa,GAAOQ,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAV,EAAA,wBAEvB,kBATY,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAWbhB,GACF,GAAG,CAACb,EAASD,IAETW,GACKjB,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,KAIdrC,EAAAA,EAAAA,KAAA,MAAAD,SACGc,EAAKyB,KAAI,SAAAC,GAAK,OACbvC,EAAAA,EAAAA,KAACwC,EAAY,CAEX/C,YAAa8C,EAAME,aACnB/C,aAAc6C,EAAMG,cACpB/C,KAAM4C,EAAM5C,MAHP4C,EAAMI,GAIX,KAIV,C,sBCzCA,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOrB,GAEP,YADAe,EAAOf,EAET,CAEIoB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAAS3B,EAAkBmC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOxB,UACX,OAAO,IAAImB,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGtB,MAAMuB,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOY,GACdjB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASY,EACnE,CAEAb,OAAMc,EACR,GACF,CACF,C","sources":["components/CastList/CastListitem/CastListItem.module.css","components/CastList/CastListitem/CastListItem.jsx","components/CastList/CastList.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import PropTypes from 'prop-types';\nimport css from './CastListItem.module.css';\n\nconst CastListItem = ({ profilePath, originalName, name }) => {\n  return (\n    <li className={css.CastListItem}>\n      <img\n        width=\"200px\"\n        height=\"300px\"\n        src={\n          profilePath\n            ? `https://image.tmdb.org/t/p/w300${profilePath}`\n            : `https://fakeimg.pl/600x400?text=Image+Not+Available`\n        }\n        alt={originalName}\n      />\n      <p>{name}</p>\n    </li>\n  );\n};\n\nCastListItem.propTypes = {\n  profilePath: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  originalName: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default CastListItem;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport CastListItem from './CastListitem/CastListItem';\n\nconst CastList = ({ fetchCredits }) => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const castData = await fetchCredits(movieId);\n        setCast(castData);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getCast();\n  }, [movieId, fetchCredits]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <ul>\n      {cast.map(actor => (\n        <CastListItem\n          key={actor.id}\n          profilePath={actor.profile_path}\n          originalName={actor.original_name}\n          name={actor.name}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default CastList;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["_ref","profilePath","originalName","name","_jsxs","className","css","children","_jsx","width","height","src","concat","alt","fetchCredits","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","isLoading","setIsLoading","useEffect","getCast","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","castData","_context","prev","next","sent","t0","console","error","finish","stop","apply","arguments","Loader","map","actor","CastListItem","profile_path","original_name","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}